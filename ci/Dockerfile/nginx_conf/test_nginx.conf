user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
  worker_connections  1024;
}
http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  keepalive_timeout  65;
  server {
    listen       80 default_server;
    server_name  _;

    gzip on;
    gzip_min_length 1k; # Minimum number of bytes in pages allowed for compression
    gzip_buffers 32 16K; # Apply for 32 units of 16k content as the compression result stream cache
    gzip_comp_level 6; # The higher the level, the smaller the pressure, and the more CPU computing resources are wasted.
    gzip_types text/plain application/x-javascript text/css application/xml; # Do not compress pictures, videos, etc., because not only will they not be reduced, but CPU and memory resources will be consumed during compression.
    gzip_disable "MSIE [1-6]\."; # Configure disabling gzip conditions and support regular expressions. This means that gzip is not enabled in ie6 and below (because lower versions of ie do not support it)
    gzip_vary on; # You can let the front-end cache server cache gzip-compressed pages, such as using Squid to cache nginx-compressed data.

    location / {
      root   /data;
      index  index.html;
      add_header Cache-Control no-cache;
      expires 0;
      try_files $uri $uri/ /index.html;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   /usr/share/nginx/html;
    }
  }
}
